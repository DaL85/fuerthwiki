package com.example.fuerthwiki;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import android.app.ListActivity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.TextView;

public class ReadWorksheetContentActivity extends ListActivity{

	//private static final String TAG = ReadWorksheetContentActivity.class.getSimpleName();
	//private ArrayAdapter<String> excelItemArrayAdapter;
	private ItemAdapter excelItemArrayAdapter;
	ArrayList<Item> item_array=null;

	private ArrayList<Item> m_parts = new ArrayList<Item>();
	
	@Override
	public void onCreate(Bundle savedInstanceState) {

		try {
			super.onCreate(savedInstanceState);   
			setContentView(R.layout.activity_getphotoname);
			//hier ListView mit allen Elementen anzeigen
			excelItemArrayAdapter = new ItemAdapter(this, R.layout.list_item, m_parts);//new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1);//new CustomAdapter(this,R.id.textview_b_item);
	        setListAdapter(excelItemArrayAdapter);
	        
	        Intent i = getIntent();
	        String excelFile = i.getStringExtra(Constants.EXCELFILE);
	        String worksheet = i.getStringExtra(Constants.WORKSHEET);
	        excelItemArrayAdapter.addAll(getWorksheetContent(excelFile,worksheet));
	        excelItemArrayAdapter.notifyDataSetChanged();
			ListView lv = getListView();
			lv.setOnItemClickListener(new OnItemClickListener() {
				@Override
				public void onItemClick(AdapterView<?> arg0, View arg1,
						int arg2, long arg3) {
					Intent intent = new Intent();
					intent.putExtra(Constants.PHOTONAME, excelItemArrayAdapter.getItem(arg2).getName());
					setResult(RESULT_OK, intent);
					finish();
				}
			});
	      
			//Element wählen lassen dann(aber noch abändern):
//			
			
		} catch (Exception e) {
			finish();
		}

	}

	
	@Override
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
		
	}

	@Override
	protected void onSaveInstanceState(Bundle outState) {
		
	}
//	private List<String> getWorksheetContent(String excelFile, String worksheet) throws IOException  {
//		List<String> resultSet = new ArrayList<String>();
//	    File inputWorkbook = new File(excelFile);
//	    FileInputStream FSInputWorkbook = new FileInputStream(excelFile);
//	    if(inputWorkbook.exists()){
//	        try {
//	        	HSSFWorkbook w = new HSSFWorkbook(FSInputWorkbook);
//	            // Get the first sheet
//	            HSSFSheet sheet = w.getSheet(worksheet);
//	            // Loop over column and lines
//	            for (int j = 0; j < sheet.getPhysicalNumberOfRows(); j++) {
//	                HSSFRow row = sheet.getRow(j);	                
//                    for (int i = 0; i < row.getPhysicalNumberOfCells(); i++) {
//                        HSSFCell cell = row.getCell(i);
//                        String item = cell.getStringCellValue();
//                        if(!item.equals(""))
//                    	{
//                        	int itemIndex = getItemIndex(item);
//                        	if(itemIndex!=0)
//                        		item = item+"("+String.valueOf(itemIndex)+")";
//                        	resultSet.add(item);
//                    	}                        	
//                    }	                
//	                continue;
//	            }
//	            w.close();
//	        }catch (Exception e) {
//	            e.printStackTrace();
//	        }
//	    }
//	    else
//	    {
//	        resultSet.add("File not found..!");
//	    }
//	    if(resultSet.size()==0){
//	        resultSet.add("Data not found..!");
//	        resultSet.add("Evtl konnte das File nicht gelesen werden");
//	        resultSet.add("Dokument als .xls speichern");
//	    }
//	    return resultSet;
//    }
	private List<Item> getWorksheetContent(String excelFile, String worksheet) throws IOException  {
		List<Item> resultSet = new ArrayList<Item>();
	    File inputWorkbook = new File(excelFile);
	    FileInputStream FSInputWorkbook = new FileInputStream(excelFile);
	    if(inputWorkbook.exists()){
	        try {
	        	HSSFWorkbook w = new HSSFWorkbook(FSInputWorkbook);
	            // Get the first sheet
	            HSSFSheet sheet = w.getSheet(worksheet);
	            // Loop over column and lines
	            for (int j = 0; j < sheet.getPhysicalNumberOfRows(); j++) {
	                HSSFRow row = sheet.getRow(j);	                
                    for (int i = 0; i < row.getPhysicalNumberOfCells(); i++) {
                        HSSFCell cell = row.getCell(i);
                        String item = cell.getStringCellValue();
                        if(!item.equals(""))
                    	{
                        	int itemIndex = getItemIndex(item);
                        	if(itemIndex!=0)
                        		item = item+"("+String.valueOf(itemIndex)+")";
                        	Item tempitem = new Item(item);
                        	resultSet.add(tempitem);
                    	}                        	
                    }	                
	                continue;
	            }
	            w.close();
	        }catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
	    else
	    {
	    	Item tempitem = new Item("File not found..!");
        	resultSet.add(tempitem);
	        //resultSet.add("File not found..!");
	    }
	    if(resultSet.size()==0){
	    	Item tempitem = new Item("Data not found..!");
        	resultSet.add(tempitem);
	        //resultSet.add("Data not found..!");
        	tempitem = new Item("Evtl konnte das File nicht gelesen werden");
        	resultSet.add(tempitem);
        	tempitem = new Item("Dokument als .xls speichern");
        	resultSet.add(tempitem);
//	        resultSet.add("Evtl konnte das File nicht gelesen werden");
//	        resultSet.add("Dokument als .xls speichern");
	    }
	    return resultSet;
    }
	private int getItemIndex(String item){
		File photo = new File(Constants.FUERTHWIKI_FOLDER+item+".jpg");
		int i=0;
		while(photo.exists())
		{
			i++;
			photo=new File(Constants.FUERTHWIKI_FOLDER+item+"("+i+")"+".jpg");
		}
	    return i;
	}

}
